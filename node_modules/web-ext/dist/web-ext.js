require("source-map-support").install(),module.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=60)}([function(e,t,n){"use strict";n.d(t,"e",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"a",(function(){return a})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return d})),n.d(t,"g",(function(){return l})),n.d(t,"f",(function(){return u}));var r=n(43),i=n.n(r);class o extends i.a{constructor(e){super(e)}}class s extends o{constructor(e){super(e)}}class a extends s{constructor(e){super(e)}}class c extends o{constructor(e){super(e)}}class d extends o{constructor(e){let t="";for(const[n,r]of e){t+=`\nError on extension loaded from ${n}: ${String(r)}\n`}super(`Reload errors: ${t}`),this.errorsBySourceDir=e}}function l(e,t){return n=>{let r=!0;if(Array.isArray(e)?-1===e.indexOf(n.code)&&-1===e.indexOf(n.errno)||(r=!1):n.code!==e&&n.errno!==e||(r=!1),r)throw n;return t(n)}}function u(e,t){return!(!Array.isArray(e)||-1===e.indexOf(t.code))||t.code===e}},function(e,t){e.exports=require("@babel/runtime/helpers/defineProperty")},function(e,t){e.exports=require("path")},function(e,t,n){"use strict";n.r(t),n.d(t,"ConsoleStream",(function(){return a})),n.d(t,"consoleStream",(function(){return c})),n.d(t,"createLogger",(function(){return d}));var r=n(1),i=n.n(r),o=n(15),s=n.n(o);class a{constructor({verbose:e=!1}={}){i()(this,"verbose",void 0),i()(this,"isCapturing",void 0),i()(this,"capturedMessages",void 0),this.verbose=e,this.isCapturing=!1,this.capturedMessages=[]}format({name:e,msg:t,level:n}){return`${this.verbose?`[${e}][${o.nameFromLevel[n]}] `:""}${t}\n`}makeVerbose(){this.verbose=!0}write(e,{localProcess:t=process}={}){const n=this.verbose?s.a.TRACE:s.a.INFO;if(e.level>=n){const n=this.format(e);this.isCapturing?this.capturedMessages.push(n):t.stdout.write(n)}}startCapturing(){this.isCapturing=!0}stopCapturing(){this.isCapturing=!1,this.capturedMessages=[]}flushCapturedLogs({localProcess:e=process}={}){for(const t of this.capturedMessages)e.stdout.write(t);this.capturedMessages=[]}}const c=new a;function d(e,{createBunyanLog:t=o.createLogger}={}){return t({name:e.replace(/^src\//,""),level:s.a.TRACE,streams:[{type:"raw",stream:c}]})}},function(e,t){e.exports=require("mz")},function(e,t){e.exports=require("util")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return g})),n.d(t,"b",(function(){return m}));var r=n(2),i=n.n(r),o=n(4),s=n(23),a=n.n(s),c=n(24),d=n.n(c),l=n(25),u=n.n(l),f=n(0),h=n(3);const p=Object(h.createLogger)(e);async function g(e){const t=i.a.join(e,"manifest.json");let n,r;p.debug(`Validating manifest at ${t}`);try{n=await o.fs.readFile(t,{encoding:"utf-8"})}catch(e){throw new f.a(`Could not read manifest.json file at ${t}: ${e}`)}n=d()(n);try{r=a()(u()(n))}catch(e){throw new f.a(`Error parsing manifest.json file at ${t}: ${e}`)}const s=[];if(r.name||s.push('missing "name" property'),r.version||s.push('missing "version" property'),r.applications&&!r.applications.gecko&&s.push('missing "applications.gecko" property'),s.length)throw new f.a(`Manifest at ${t} is invalid: ${s.join("; ")}`);return r}function m(e){return e.applications?e.applications.gecko.id:void 0}}).call(this,"src/util/manifest.js")},function(e,t){e.exports=require("fs")},function(e,t,n){"use strict";function r(e){return e.isTTY}function i(e,t){e.setRawMode(t)}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return i}))},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var r=n(1),i=n.n(r),o=n(50),s=n.n(o),a=n(51),c=n.n(a),d=n(3),l=n(0);const u=Object(d.createLogger)(e);class f{constructor(e){i()(this,"client",void 0),i()(this,"checkedForAddonReloading",void 0),this.client=e,this.checkedForAddonReloading=!1,e.client.on("disconnect",()=>{u.debug('Received "disconnect" from Firefox client')}),e.client.on("end",()=>{u.debug('Received "end" from Firefox client')}),e.client.on("message",e=>{u.debug(`Received message from client: ${JSON.stringify(e)}`)})}disconnect(){this.client.disconnect()}addonRequest(e,t){return new Promise((n,r)=>{this.client.client.makeRequest({to:e.actor,type:t},e=>{if(e.error){const n=`${e.error}: ${e.message}`;u.debug(`Client responded to '${t}' request with error:`,n),r(new l.e(n))}else n(e)})})}getAddonsActor(){return new Promise((e,t)=>{this.client.request("getRoot",(n,r)=>{n?(u.debug(`Falling back to listTabs because getRoot failed: ${n}`),this.client.request("listTabs",(n,r)=>n?t(new l.e(`Remote Firefox: listTabs() error: ${n}`)):r.addonsActor?void e(r.addonsActor):(u.debug("listTabs returned a falsey addonsActor: "+`${r.addonsActor}`),t(new l.c("This is an older version of Firefox that does not provide an add-ons actor for remote installation. Try Firefox 49 or higher."))))):r.addonsActor?e(r.addonsActor):t(new l.c("This version of Firefox does not provide an add-ons actor for remote installation."))})})}installTemporaryAddon(e){return new Promise((t,n)=>{this.getAddonsActor().then(r=>{this.client.client.makeRequest({to:r,type:"installTemporaryAddon",addonPath:e},r=>{if(r.error)return n(new l.e("installTemporaryAddon: Error: "+`${r.error}: ${r.message}`));u.debug(`installTemporaryAddon: ${JSON.stringify(r)}`),u.info(`Installed ${e} as a temporary add-on`),t(r)})}).catch(n)})}getInstalledAddon(e){return new Promise((e,t)=>{this.client.request("listAddons",(n,r)=>{n?t(new l.e(`Remote Firefox: listAddons() error: ${n}`)):e(r.addons)})}).then(t=>{for(const n of t)if(n.id===e)return n;throw u.debug(`Remote Firefox has these addons: ${t.map(e=>e.id)}`),new l.e("The remote Firefox does not have your extension installed")})}async checkForAddonReloading(e){if(this.checkedForAddonReloading)return e;{const t=await this.addonRequest(e,"requestTypes");if(-1===t.requestTypes.indexOf("reload")){const e=JSON.stringify(t.requestTypes);throw u.debug(`Remote Firefox only supports: ${e}`),new l.d("This Firefox version does not support add-on reloading. Re-run with --no-reload")}return this.checkedForAddonReloading=!0,e}}async reloadAddon(e){const t=await this.getInstalledAddon(e);await this.checkForAddonReloading(t),await this.addonRequest(t,"reload"),process.stdout.write(`\rLast extension reload: ${(new Date).toTimeString()}`),u.debug("\n")}}async function h(e,{connectToFirefox:t=c.a}={}){u.debug(`Connecting to Firefox on port ${e}`);const n=await t(e);return u.debug(`Connected to the remote Firefox debugger on port ${e}`),new f(n)}async function p({maxRetries:e=250,retryInterval:t=120,port:n},{connectToFirefox:r=h}={}){return u.debug("Connecting to the remote Firefox debugger"),async function(){var i;for(let o=0;o<=e;o++)try{return await r(n)}catch(e){if(!Object(l.f)("ECONNREFUSED",e))throw u.error(e.stack),e;await new Promise(e=>{setTimeout(e,t)}),i=e,u.debug(`Retrying Firefox (${o}); connection error: ${e}`)}throw u.debug("Connect to Firefox debugger: too many retries"),i}()}function g(){return new Promise(e=>{const t=s.a.createServer();t.listen(0,"127.0.0.1",()=>{const n=t.address().port;t.close(()=>e(n))})})}}).call(this,"src/firefox/remote.js")},function(e,t){e.exports=require("firefox-profile")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return f}));var r=n(1),i=n.n(r),o=n(2),s=n.n(o),a=n(46),c=n.n(a),d=n(3);const l=Object(d.createLogger)(e);class u{constructor({baseIgnoredPatterns:e=["**/*.xpi","**/*.zip","**/.*","**/.*/**/*","**/node_modules","**/node_modules/**/*"],ignoreFiles:t=[],sourceDir:n,artifactsDir:r}={}){i()(this,"filesToIgnore",void 0),i()(this,"sourceDir",void 0),n=s.a.resolve(n),this.filesToIgnore=[],this.sourceDir=n,this.addToIgnoreList(e),t&&this.addToIgnoreList(t),r&&((e,t)=>{const n=s.a.relative(e,t);return!!n&&(".."!==n&&!n.startsWith(`..${s.a.sep}`))})(n,r)&&(r=s.a.resolve(r),l.debug(`Ignoring artifacts directory "${r}" `+"and all its subdirectories"),this.addToIgnoreList([r,s.a.join(r,"**","*")]))}resolveWithSourceDir(e){const t=s.a.resolve(this.sourceDir,e);return l.debug(`Resolved path ${e} with sourceDir ${this.sourceDir} `+`to ${t}`),t}addToIgnoreList(e){for(const t of e)if("!"===t.charAt(0)){const e=this.resolveWithSourceDir(t.substr(1));this.filesToIgnore.push(`!${e}`)}else this.filesToIgnore.push(this.resolveWithSourceDir(t))}wantFile(e){const t=this.resolveWithSourceDir(e);return!(c()(t,this.filesToIgnore).length>0)||(l.debug(`FileFilter: ignoring file ${t}`),!1)}}const f=e=>new u(e)}).call(this,"src/util/file-filter.js")},function(e,t,n){"use strict";(function(e){n.d(t,"b",(function(){return f})),n.d(t,"a",(function(){return h}));var r=n(1),i=n.n(r),o=n(5),s=n(32),a=n.n(s),c=n(3),d=n(35);const l=Object(c.createLogger)(e);a.a.dir[d.b]=Object(d.a)(a.a.dir);const u=Object(o.promisify)(a.a.dir);function f(e){const t=new h;return t.create().then(()=>e(t)).catch(t.errorHandler()).then(t.successHandler())}class h{constructor(){i()(this,"_path",void 0),i()(this,"_removeTempDir",void 0),this._path=void 0,this._removeTempDir=void 0}create(){return u({prefix:"tmp-web-ext-",unsafeCleanup:!0}).then(([e,t])=>(this._path=e,this._removeTempDir=()=>new Promise((e,n)=>{t(t=>t?n(t):e())}),l.debug(`Created temporary directory: ${this.path()}`),this))}path(){if(!this._path)throw new Error("You cannot access path() before calling create()");return this._path}errorHandler(){return async e=>{throw await this.remove(),e}}successHandler(){return async e=>(await this.remove(),e)}remove(){if(this._removeTempDir)return l.debug(`Removing temporary directory: ${this.path()}`),this._removeTempDir&&this._removeTempDir()}}}).call(this,"src/util/temp-dir.js")},function(e,t){e.exports=require("camelcase")},function(e,t){e.exports=require("event-to-promise")},function(e,t){e.exports=require("bunyan")},function(e,t,n){"use strict";(function(e){n.d(t,"b",(function(){return h})),n.d(t,"a",(function(){return p})),n.d(t,"c",(function(){return m}));var r=n(1),i=n.n(r),o=n(30),s=n.n(o),a=n(0),c=(n(18),n(3)),d=n(11),l=n(8),u=n(26);const f=Object(c.createLogger)(e);async function h(e){switch(e.target){case"firefox-desktop":{const{FirefoxDesktopExtensionRunner:t}=n(63);return new t(e.params)}case"firefox-android":{const{FirefoxAndroidExtensionRunner:t}=n(64);return new t(e.params)}case"chromium":{const{ChromiumExtensionRunner:t}=n(65);return new t(e.params)}default:throw new a.e(`Unknown target: "${e.target}"`)}}class p{constructor(e){i()(this,"extensionRunners",void 0),i()(this,"desktopNotifications",void 0),this.extensionRunners=e.runners,this.desktopNotifications=e.desktopNotifications}getName(){return"Multi Extension Runner"}async run(){const e=[];for(const t of this.extensionRunners)e.push(t.run());await Promise.all(e)}async reloadAllExtensions(){f.debug("Reloading all reloadable add-ons");const e=[];for(const t of this.extensionRunners){const n=t.reloadAllExtensions().then(()=>({runnerName:t.getName()}),e=>({runnerName:t.getName(),reloadError:e}));e.push(n)}return await Promise.all(e).then(e=>(this.handleReloadResults(e),e))}async reloadExtensionBySourceDir(e){f.debug(`Reloading add-on at ${e}`);const t=[];for(const n of this.extensionRunners){const r=n.reloadExtensionBySourceDir(e).then(()=>({runnerName:n.getName(),sourceDir:e}),t=>({runnerName:n.getName(),reloadError:t,sourceDir:e}));t.push(r)}return await Promise.all(t).then(e=>(this.handleReloadResults(e),e))}registerCleanup(e){const t=[];for(const e of this.extensionRunners)t.push(new Promise(t=>{e.registerCleanup(t)}));Promise.all(t).then(e,e)}async exit(){const e=[];for(const t of this.extensionRunners)e.push(t.exit());await Promise.all(e)}handleReloadResults(e){for(const{runnerName:t,reloadError:n,sourceDir:r}of e)if(n instanceof Error){let e="Error occurred while reloading";r&&(e+=` "${r}" `),e+=`on "${t}" - ${n.message}`,f.error(`\n${e}`),f.debug(n.stack),this.desktopNotifications({title:"web-ext run: extension reload error",message:e})}}}function g({reloadExtension:e,sourceDir:t,watchFile:n,artifactsDir:r,ignoreFiles:i,onSourceChange:o=u.a,createFileFilter:s=d.a}){const a=s({sourceDir:t,artifactsDir:r,ignoreFiles:i});return o({sourceDir:t,watchFile:n,artifactsDir:r,onChange:()=>e(t),shouldWatchFile:e=>a.wantFile(e)})}function m({artifactsDir:e,extensionRunner:t,ignoreFiles:n,noInput:r=!1,sourceDir:i,watchFile:o},{createWatcher:a=g,stdin:c=process.stdin,kill:d=process.kill}={}){const u=!r;u||f.debug("Input has been disabled because of noInput==true");const h=a({reloadExtension:e=>{t.reloadExtensionBySourceDir(e)},sourceDir:i,watchFile:o,artifactsDir:e,ignoreFiles:n});if(t.registerCleanup(()=>{h.close(),u&&c.pause()}),u&&Object(l.a)(c)){s.a.emitKeypressEvents(c),Object(l.b)(c,!0);const e="Press R to reload (and Ctrl-C to quit)";Promise.resolve().then((async function(){f.info(e);let n=!1;for(;!n;){const r=await new Promise(e=>{c.once("keypress",(t,n)=>e(n))});r.ctrl&&"c"===r.name?n=!0:"z"===r.name?(Object(l.b)(c,!1),f.info("\nweb-ext has been suspended on user request"),d(process.pid,"SIGTSTP"),f.info(`\nweb-ext has been resumed. ${e}`),Object(l.b)(c,!0)):"r"===r.name&&(f.debug("Reloading installed extensions on user request"),t.reloadAllExtensions())}f.info("\nExiting web-ext on user request"),t.exit()}))}}}).call(this,"src/extension-runners/index.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"safeFileName",(function(){return $})),n.d(t,"getDefaultLocalizedName",(function(){return P})),n.d(t,"defaultPackageCreator",(function(){return A})),n.d(t,"default",(function(){return E}));var r=n(2),i=n.n(r),o=n(7),s=n(4),a=n(23),c=n.n(a),d=n(24),l=n.n(d),u=n(25),f=n.n(u),h=n(14),p=n.n(h),g=n(26),m=n(44),b=n(6),w=n(27),x=n(3),y=n(0),v=n(11);const D=Object(x.createLogger)(e);function $(e){return e.toLowerCase().replace(/[^a-z0-9.-]+/g,"_")}async function P({messageFile:e,manifestData:t}){let n,r,i=t.name;try{r=await s.fs.readFile(e,{encoding:"utf-8"})}catch(t){throw new y.d(`Error reading messages.json file at ${e}: ${t}`)}r=l()(r);try{n=c()(f()(r))}catch(t){throw new y.d(`Error parsing messages.json file at ${e}: ${t}`)}return i=t.name.replace(/__MSG_([A-Za-z0-9@_]+?)__/g,(t,r)=>{if(n[r]&&n[r].message)return n[r].message;throw new y.d(`The locale file ${e} `+`is missing key: ${r}`)}),Promise.resolve(i)}async function A({manifestData:e,sourceDir:t,fileFilter:n,artifactsDir:r,overwriteDest:s,showReadyMessage:a},{eventToPromise:c=p.a}={}){let d;e?(d=Object(b.b)(e),D.debug(`Using manifest id=${d||"[not specified]"}`)):e=await Object(b.a)(t);const l=await Object(m.a)(t,{filter:(...e)=>n.wantFile(...e)});let u=e.name,{default_locale:f}=e;if(f){f=f.replace(/-/g,"_");const n=i.a.join(t,"_locales",f,"messages.json");D.debug("Manifest declared default_locale, localizing extension name"),u=await P({messageFile:n,manifestData:e})}const h=$(`${u}-${e.version}.zip`),g=i.a.join(r,h),w=Object(o.createWriteStream)(g,{flags:"wx"});w.write(l,()=>w.end());try{await c(w,"close")}catch(e){if(!Object(y.f)("EEXIST",e))throw e;if(!s)throw new y.d(`Extension exists at the destination path: ${g}\n`+"Use --overwrite-dest to enable overwriting.");D.info(`Destination exists, overwriting: ${g}`);const t=Object(o.createWriteStream)(g);t.write(l,()=>t.end()),await c(t,"close")}return a&&D.info(`Your web extension is ready: ${g}`),{extensionPath:g}}async function E({sourceDir:e,artifactsDir:t,asNeeded:n=!1,overwriteDest:r=!1,ignoreFiles:i=[]},{manifestData:o,createFileFilter:s=v.a,fileFilter:a=s({sourceDir:e,artifactsDir:t,ignoreFiles:i}),onSourceChange:c=g.a,packageCreator:d=A,showReadyMessage:l=!0}={}){const u=n;D.info(`Building web extension from ${e}`);const f=()=>d({manifestData:o,sourceDir:e,fileFilter:a,artifactsDir:t,overwriteDest:r,showReadyMessage:l});await Object(w.a)(t);const h=await f();return u&&(D.info("Rebuilding when files change..."),c({sourceDir:e,artifactsDir:t,onChange:()=>f().catch(e=>{throw D.error(e.stack),e}),shouldWatchFile:(...e)=>a.wantFile(...e)})),h}}.call(this,"src/cmd/build.js")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return a}));var r=n(48),i=n.n(r),o=n(3);const s=Object(o.createLogger)(e);function a({title:e,message:t,icon:n},{notifier:r=i.a,log:o=s}={}){return new Promise((i,s)=>{r.notify({title:e,message:t,icon:n},(e,t)=>{e?(o.debug(`Desktop notifier error: ${e.message},`+` response: ${t}`),s(e)):i()})})}}).call(this,"src/util/desktop-notifier.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"defaultFirefoxEnv",(function(){return $})),n.d(t,"run",(function(){return P})),n.d(t,"isDefaultProfile",(function(){return E})),n.d(t,"configureProfile",(function(){return F})),n.d(t,"defaultCreateProfileFinder",(function(){return k})),n.d(t,"useProfile",(function(){return S})),n.d(t,"createProfile",(function(){return O})),n.d(t,"copyProfile",(function(){return j})),n.d(t,"installExtension",(function(){return C}));var r=n(7),i=n.n(r),o=n(2),s=n.n(o),a=n(5),c=n(49),d=n.n(c),l=n(10),u=n.n(l),f=n(4),h=n(14),p=n.n(h),g=n(31),m=n(0),b=n(29),w=n(6),x=n(9),y=n(3);const v=Object(y.createLogger)(e),D=f.fs.stat.bind(f.fs),$={XPCOM_DEBUG_BREAK:"stack",NS_TRACE_MALLOC_DISABLE_STACKS:"1"};async function P(e,{fxRunner:t=d.a,findRemotePort:n=x.b,firefoxBinary:r,binaryArgs:i}={}){v.debug(`Running Firefox with profile at ${e.path()}`);const o=await n(),s=await t({binary:r,"binary-args":i,"no-remote":!0,listen:o,foreground:!0,profile:e.path(),env:{...process.env,...$},verbose:!0}),a=s.process;return v.debug(`Executing Firefox binary: ${s.binary}`),v.debug(`Firefox args: ${s.args.join(" ")}`),a.on("error",e=>{throw v.error(`Firefox error: ${e}`),e}),v.info("Use --verbose or open Tools > Web Developer > Browser Console to see logging"),a.stderr.on("data",e=>{v.debug(`Firefox stderr: ${e.toString().trim()}`)}),a.stdout.on("data",e=>{v.debug(`Firefox stdout: ${e.toString().trim()}`)}),a.on("close",()=>{v.debug("Firefox closed")}),{firefox:a,debuggerPort:o}}const A=["default","dev-edition-default"];async function E(e,t=u.a.Finder,n=f.fs.stat){if(A.includes(e))return!0;const r=t.locateUserDirectory(),i=s.a.join(r,"profiles.ini");try{await n(i)}catch(e){if(Object(m.f)("ENOENT",e))return v.debug(`profiles.ini not found: ${e}`),!1;throw e}const o=new t(r),c=Object(a.promisify)(o.readProfiles.bind(o));await c();const d=s.a.normalize(s.a.join(s.a.resolve(e),s.a.sep));for(const t of o.profiles)if(A.includes(t.Name)||"1"===t.Default){let n;if(t.Name===e)return!0;if(n="1"===t.IsRelative?s.a.join(r,t.Path,s.a.sep):s.a.join(t.Path,s.a.sep),s.a.normalize(n)===d)return!0}return!1}function F(e,{app:t="firefox",getPrefs:n=b.b,customPrefs:r={}}={}){const i=n(t);if(Object.keys(i).forEach(t=>{e.setPreference(t,i[t])}),Object.keys(r).length>0){const t=JSON.stringify(r,null,2);v.info(`Setting custom Firefox preferences: ${t}`),Object.keys(r).forEach(t=>{e.setPreference(t,r[t])})}return e.updatePreferences(),Promise.resolve(e)}function k({userDirectoryPath:e,FxProfile:t=u.a}={}){const n=new t.Finder(e),r=Object(a.promisify)(n.readProfiles.bind(n)),i=Object(a.promisify)(n.getPath.bind(n));return async e=>{try{if(await r(),0!==n.profiles.filter(t=>t.Name===e).length)return await i(e)}catch(e){if(!Object(m.f)("ENOENT",e))throw e;v.warn("Unable to find Firefox profiles.ini")}}}async function S(e,{app:t,configureThisProfile:n=F,isFirefoxDefaultProfile:r=E,customPrefs:i={},createProfileFinder:o=k}={}){if(await r(e))throw new m.d("Cannot use --keep-profile-changes on a default profile"+` ("${e}")`+" because web-ext will make it insecure and unsuitable for daily use.\nSee https://github.com/mozilla/web-ext/issues/1005");let s;const a=o();if(await Object(g.a)(e))v.debug(`Using profile directory "${e}"`),s=e;else if(v.debug(`Assuming ${e} is a named profile`),s=await a(e),!s)throw new m.d(`The request "${e}" profile name `+"cannot be resolved to a profile path");const c=new u.a({destinationDirectory:s});return await n(c,{app:t,customPrefs:i})}async function O({app:e,configureThisProfile:t=F,customPrefs:n={}}={}){const r=new u.a;return await t(r,{app:e,customPrefs:n})}async function j(e,{app:t,configureThisProfile:n=F,copyFromUserProfile:r=l.copyFromUserProfile,customPrefs:i={}}={}){const o=Object(a.promisify)(u.a.copy),s=Object(a.promisify)(r);try{let r;return await Object(g.a)(e)?(v.debug(`Copying profile directory from "${e}"`),r=await o({profileDirectory:e})):(v.debug(`Assuming ${e} is a named profile`),r=await s({name:e})),n(r,{app:t,customPrefs:i})}catch(t){throw new m.e(`Could not copy Firefox profile from ${e}: ${t}`)}}async function C({asProxy:e=!1,manifestData:t,profile:n,extensionPath:r,asyncFsStat:o=D}){if(!n.extensionsDir)throw new m.e("profile.extensionsDir was unexpectedly empty");try{await o(n.extensionsDir)}catch(e){if(!Object(m.f)("ENOENT",e))throw e;v.debug(`Creating extensions directory: ${n.extensionsDir}`),await f.fs.mkdir(n.extensionsDir)}const a=Object(w.b)(t);if(!a)throw new m.d("An explicit extension ID is required when installing to a profile (applications.gecko.id not found in manifest.json)");if(e){if(v.debug(`Installing as an extension proxy; source: ${r}`),!await Object(g.a)(r))throw new m.e("proxy install: extensionPath must be the extension source "+`directory; got: ${r}`);const e=s.a.join(n.extensionsDir,`${a}`),t=i.a.createWriteStream(e);return t.write(r),t.end(),await p()(t,"close")}{const e=i.a.createReadStream(r),t=s.a.join(n.extensionsDir,`${a}.xpi`),o=i.a.createWriteStream(t);return v.debug(`Installing extension from ${r} to ${t}`),e.pipe(o),await Promise.all([p()(e,"close"),p()(o,"close")])}}}.call(this,"src/firefox/index.js")},function(e,t){e.exports=require("os")},function(e,t){e.exports=require("decamelize")},function(e,t,n){"use strict";t.a={build:async function(e,t){const{default:r}=n(17);return r(e,t)},lint:async function(e,t){const{default:r}=n(61);return r(e,t)},run:async function(e,t){const{default:r}=n(62);return r(e,t)},sign:async function(e,t){const{default:r}=n(66);return r(e,t)},docs:async function(e,t){const{default:r}=n(67);return r(e,t)}}},function(e,t){e.exports=require("parse-json")},function(e,t){e.exports=require("strip-bom")},function(e,t){e.exports=require("strip-json-comments")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return u}));var r=n(4),i=n(41),o=n.n(i),s=n(42),a=n.n(s),c=n(0),d=n(3);const l=Object(d.createLogger)(e);function u({sourceDir:e,watchFile:t,artifactsDir:n,onChange:i,shouldWatchFile:s}){const d=new o.a;i=a()(i,1e3,!0),d.on("change",e=>{!function({artifactsDir:e,onChange:t,filePath:n,shouldWatchFile:r}){0!==n.indexOf(e)&&r(n)?(l.debug(`Changed: ${n}`),l.debug(`Last change detection: ${(new Date).toTimeString()}`),t()):l.debug(`Ignoring change to: ${n}`)}({artifactsDir:n,onChange:i,filePath:e,shouldWatchFile:s})}),l.debug(`Watching for file changes in ${t||e}`);const u=[],f=[];if(t){if(r.fs.existsSync(t)&&!r.fs.lstatSync(t).isFile())throw new c.d("Invalid --watch-file value: "+`"${t}" is not a file.`);f.push(t)}else u.push(e);return d.watch(f,u,Date.now()),process.on("SIGINT",()=>d.close()),d}}).call(this,"src/watcher.js")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return l}));var r=n(4),i=n(28),o=n.n(i),s=n(0),a=n(3);const c=Object(a.createLogger)(e),d=r.fs.access.bind(r.fs);async function l(e,{asyncMkdirp:t=o.a,asyncFsAccess:n=d}={}){try{if(!(await r.fs.stat(e)).isDirectory())throw new s.d(`--artifacts-dir="${e}" exists but it is not a directory.`);try{await n(e,r.fs.W_OK)}catch(t){throw Object(s.f)("EACCES",t)?new s.d(`--artifacts-dir="${e}" exists but the user lacks `+"permissions on it."):t}}catch(n){if(Object(s.f)("EACCES",n))throw new s.d(`Cannot access --artifacts-dir="${e}" because the user `+`lacks permissions: ${n}`);if(!Object(s.f)("ENOENT",n))throw n;try{c.debug(`Creating artifacts directory: ${e}`),await t(e)}catch(t){throw Object(s.f)("EACCES",t)?new s.d(`Cannot create --artifacts-dir="${e}" because the `+`user lacks permissions: ${t}`):t}}return e}}).call(this,"src/util/artifacts.js")},function(e,t){e.exports=require("mkdirp")},function(e,t,n){"use strict";(function(e){n.d(t,"b",(function(){return d})),n.d(t,"a",(function(){return l}));var r=n(0),i=n(3);const o=Object(i.createLogger)(e),s=["devtools.debugger.remote-enabled","devtools.debugger.prompt-connection","xpinstall.signatures.required"],a={"browser.dom.window.dump.enabled":!0,"datareporting.policy.dataSubmissionEnabled":!1,"devtools.debugger.remote-enabled":!0,"devtools.debugger.prompt-connection":!1,"devtools.browserconsole.contentMessages":!0,"extensions.logging.enabled":!1,"extensions.checkCompatibility.nightly":!1,"extensions.update.enabled":!1,"extensions.update.notifyUser":!1,"extensions.enabledScopes":5,"extensions.getAddons.cache.enabled":!1,"extensions.installDistroAddons":!1,"extensions.autoDisableScopes":10,"app.update.enabled":!1,"xpinstall.signatures.required":!1,"browser.link.open_newwindow":3},c={common:a,fennec:{"browser.console.showInPanel":!0,"browser.firstrun.show.uidiscovery":!1,"devtools.remote.usb.enabled":!0},firefox:{"browser.startup.homepage":"about:blank","startup.homepage_welcome_url":"about:blank","startup.homepage_welcome_url.additional":"","devtools.errorconsole.enabled":!0,"devtools.chrome.enabled":!0,"urlclassifier.updateinterval":172800,"browser.safebrowsing.provider.0.gethashURL":"http://localhost/safebrowsing-dummy/gethash","browser.safebrowsing.provider.0.keyURL":"http://localhost/safebrowsing-dummy/newkey","browser.safebrowsing.provider.0.updateURL":"http://localhost/safebrowsing-dummy/update","browser.selfsupport.url":"https://localhost/selfrepair","browser.reader.detectedFirstArticle":!0,"datareporting.policy.firstRunURL":""}};function d(e="firefox"){const t=c[e];if(!t)throw new r.e(`Unsupported application: ${e}`);return{...a,...t}}function l(e){const t={};for(const n of e){const e=n.split("=");if(e.length<2)throw new r.d(`Incomplete custom preference: "${n}". `+'Syntax expected: "prefname=prefvalue".');const i=e[0];let a=e.slice(1).join("=");if(/[^\w{@}.-]/.test(i))throw new r.d(`Invalid custom preference name: ${i}`);a===`${parseInt(a)}`?a=parseInt(a,10):"true"!==a&&"false"!==a||(a="true"===a),s.includes(i)?o.warn(`'${i}' preference cannot be customized.`):t[`${i}`]=a}return t}}).call(this,"src/firefox/preferences.js")},function(e,t){e.exports=require("readline")},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(4),i=n(0);function o(e){return r.fs.stat(e).then(e=>e.isDirectory()).catch(Object(i.g)(["ENOENT","ENOTDIR"],()=>!1))}},function(e,t){e.exports=require("tmp")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return b})),n.d(t,"c",(function(){return w})),n.d(t,"b",(function(){return x}));var r=n(20),i=n.n(r),o=n(2),s=n.n(o),a=n(58),c=n.n(a),d=n(13),l=n.n(d),u=n(21),f=n.n(u),h=n(59),p=n(3),g=n(0);const m=Object(p.createLogger)(e);function b({argv:e,argvFromCLI:t,configObject:n,options:r,configFileName:i}){let o={...e};for(const e of Object.keys(n)){if(l()(e)!==e)throw new g.d(`The config option "${e}" must be `+`specified in camel case: "${l()(e)}"`);if(!Array.isArray(n[e])&&"object"==typeof r[e]&&"object"==typeof n[e]){o=b({argv:o,argvFromCLI:t,configObject:n[e],options:r[e],configFileName:i});continue}const s=f()(e,"-");if("object"!=typeof r[s])throw new g.d(`The config file at ${i} specified `+`an unknown option: "${e}"`);if(void 0===r[s].type)throw new g.e(`Option: ${e} was defined without a type.`);const a="count"===r[s].type?"number":r[s].type,c=Array.isArray(n[e])?"array":typeof n[e];if(c!==a)throw new g.d(`The config file at ${i} specified `+`the type of "${e}" incorrectly as "${c}"`+` (expected type "${a}")`);let d;if(r[s]&&(void 0!==r[s].default?d=r[s].default:"boolean"===a&&(d=!1)),void 0!==t[e]&&t[e]!==d){m.debug(`Favoring CLI: ${e}=${t[e]} over `+`configuration: ${e}=${n[e]}`),o[e]=t[e];continue}o[e]=n[e];const u=r[s].coerce;u&&(m.debug(`Calling coerce() on configured value for ${e}`),o[e]=u(o[e]))}return o}function w(e){const t=s.a.resolve(e);let n;m.debug(`Loading JS config file: "${e}" `+`(resolved to "${t}")`);try{n=c()(t)}catch(e){throw m.debug("Handling error:",e),new g.d(`Cannot read config file: ${t}\n`+`Error: ${e.message}`)}return e.endsWith("package.json")&&(m.debug("Looking for webExt key inside package.json file"),n=n.webExt||{}),0===Object.keys(n).length&&m.debug(`Config file ${t} did not define any options. `+"Did you set module.exports = {...}?"),n}async function x({getHomeDir:e=i.a.homedir}={}){const t=[s.a.join(e(),".web-ext-config.js"),s.a.join(process.cwd(),"package.json"),s.a.join(process.cwd(),"web-ext-config.js")],n=await Promise.all(t.map(async e=>{const t=s.a.resolve(e);return await Object(h.a)(t)?t:void m.debug(`Discovered config "${t}" does not `+"exist or is not readable")})),r=[];return n.forEach(e=>{"string"==typeof e&&r.push(e)}),r}}).call(this,"src/config.js")},function(e,t){e.exports=require("git-rev-sync")},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}));var r=n(5);const i=r.promisify.custom;function o(e){return(...t)=>new Promise((n,r)=>{e(...t,(e,...t)=>{e?r(e):n(t)})})}},function(e,t){e.exports=require("chrome-launcher")},function(e,t){e.exports=require("ws")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return k}));var r=n(1),i=n.n(r),o=n(20),s=n.n(o),a=n(2),c=n.n(a),d=n(7),l=n(13),u=n.n(l),f=n(21),h=n.n(f),p=n(34),g=n.n(p),m=n(39),b=n.n(m),w=n(40),x=n(22),y=n(0),v=n(3),D=n(29),$=n(56),P=n(33);const A=Object(v.createLogger)(e);class E{constructor(e,{absolutePackageDir:t=process.cwd()}={}){i()(this,"absolutePackageDir",void 0),i()(this,"yargs",void 0),i()(this,"commands",void 0),i()(this,"shouldExitProgram",void 0),i()(this,"verboseEnabled",void 0),i()(this,"options",void 0),i()(this,"programArgv",void 0),e=e||process.argv.slice(2),this.programArgv=e;const n=b()(e,t);this.absolutePackageDir=t,this.verboseEnabled=!1,this.shouldExitProgram=!0,this.yargs=n,this.yargs.parserConfiguration({"boolean-negation":!0}),this.yargs.strict(),this.commands={},this.options={}}command(e,t,n,r={}){return this.options[u()(e)]=r,this.yargs.command(e,t,e=>{if(r)return e.demandCommand(0,0,void 0,"This command does not take any arguments").strict().exitProcess(this.shouldExitProgram).env("WEB_EXT").options(r)}),this.commands[e]=n,this}setGlobalOptions(e){return this.options={...this.options,...e},Object.keys(e).forEach(t=>{e[t].global=!0,void 0===e[t].demandOption&&(e[t].demandOption=!0)}),this.yargs.options(e),this}enableVerboseMode(e,t){this.verboseEnabled||(e.makeVerbose(),A.info("Version:",t),this.verboseEnabled=!0)}getArguments(){const e=this.yargs.argv;if(null!=e.configDiscovery&&(e.noConfigDiscovery=!e.configDiscovery),null!=e.reload&&(e.noReload=!e.reload),e.ignoreFiles&&!e.ignoreFiles.length)throw new y.d("Not enough arguments following: ignore-files");if(e.startUrl&&!e.startUrl.length)throw new y.d("Not enough arguments following: start-url");return e}cleanupProcessEnvConfigs(e){const t=Object(w.Parser)(this.programArgv)._[0],n=e.env||{};t&&Object.keys(n).filter(e=>e.startsWith("WEB_EXT")).forEach(e=>{const r=(e=>h()(u()(e.replace("WEB_EXT","")),"-"))(e),i=this.options[r],o=this.options[t]&&this.options[t][r];i||o||(A.debug(`Environment ${e} not supported by web-ext ${t}`),delete n[e])})}async execute({checkForUpdates:e=$.a,systemProcess:t=process,logStream:n=v.consoleStream,getVersion:r=F,applyConfigToArgv:i=P.a,discoverConfigFiles:o=P.b,loadJSConfigFile:a=P.c,shouldExitProgram:d=!0,globalEnv:l="production"}={}){this.shouldExitProgram=d,this.yargs.exitProcess(this.shouldExitProgram),this.cleanupProcessEnvConfigs(t);const u=this.getArguments(),f=u._[0],h=r(this.absolutePackageDir),p=this.commands[f];u.verbose&&this.enableVerboseMode(n,h);let g={...u};try{if(void 0===f)throw new y.d("No sub-command was specified in the args");if(!p)throw new y.d(`Unknown command: ${f}`);"production"===l&&e({version:h});const t=[];if(u.configDiscovery){A.debug("Discovering config files. Set --no-config-discovery to disable");const e=await o();t.push(...e)}else A.debug("Not discovering config files");if(u.config&&t.push(c.a.resolve(u.config)),t.length){const e=t.map(e=>e.replace(process.cwd(),".")).map(e=>e.replace(s.a.homedir(),"~")).join(", ");A.info("Applying config file"+`${1!==t.length?"s":""}: `+`${e}`)}t.forEach(e=>{const t=a(e);g=i({argv:g,argvFromCLI:u,configFileName:e,configObject:t,options:this.options})}),g.verbose&&this.enableVerboseMode(n,h),await p(g,{shouldExitProgram:d})}catch(e){if(e instanceof y.d&&!g.verbose?A.error(`\n${e}\n`):A.error(`\n${e.stack}\n`),e.code&&A.error(`Error code: ${e.code}\n`),A.debug(`Command executed: ${f}`),!this.shouldExitProgram)throw e;t.exit(1)}}}function F(e,{globalEnv:t="production"}={}){if("production"===t){A.debug("Getting the version from package.json");const t=Object(d.readFileSync)(c.a.join(e,"package.json"));return JSON.parse(t).version}return A.debug("Getting version from the git revision"),`${g.a.branch(e)}-${g.a.long(e)}`}function k(e,{getVersion:t=F,commands:n=x.a,argv:r,runOptions:i={}}={}){const o=new E(r,{absolutePackageDir:e}),s=t(e);return o.yargs.usage("Usage: $0 [options] command\n\nOption values can also be set by declaring an environment variable prefixed\nwith $WEB_EXT_. For example: $WEB_EXT_SOURCE_DIR=/path is the same as\n--source-dir=/path.\n\nTo view specific help for any given command, add the command name.\nExample: $0 --help run.\n").help("help").alias("h","help").env("WEB_EXT").version(s).demandCommand(1,"You must specify a command").strict().recommendCommands(),o.setGlobalOptions({"source-dir":{alias:"s",describe:"Web extension source directory.",default:process.cwd(),requiresArg:!0,type:"string",coerce:c.a.resolve},"artifacts-dir":{alias:"a",describe:"Directory where artifacts will be saved.",default:c.a.join(process.cwd(),"web-ext-artifacts"),normalize:!0,requiresArg:!0,type:"string"},verbose:{alias:"v",describe:"Show verbose output",type:"boolean",demandOption:!1},"ignore-files":{alias:"i",describe:'A list of glob patterns to define which files should be ignored. (Example: --ignore-files=path/to/first.js path/to/second.js "**/*.log")',demandOption:!1,type:"array"},"no-input":{describe:"Disable all features that require standard input",type:"boolean",demandOption:!1},config:{alias:"c",describe:"Path to a CommonJS config file to set option defaults",default:void 0,demandOption:!1,requiresArg:!0,type:"string"},"config-discovery":{describe:"Discover config files in home directory and working directory. Disable with --no-config-discovery.",demandOption:!1,default:!0,type:"boolean"}}),o.command("build","Create an extension package from source",n.build,{"as-needed":{describe:"Watch for file changes and re-build as needed",type:"boolean"},"overwrite-dest":{alias:"o",describe:"Overwrite destination package if it exists.",type:"boolean"}}).command("sign","Sign the extension so it can be installed in Firefox",n.sign,{"api-key":{describe:"API key (JWT issuer) from addons.mozilla.org",demandOption:!0,type:"string"},"api-secret":{describe:"API secret (JWT secret) from addons.mozilla.org",demandOption:!0,type:"string"},"api-url-prefix":{describe:"Signing API URL prefix",default:"https://addons.mozilla.org/api/v3",demandOption:!0,type:"string"},"api-proxy":{describe:"Use a proxy to access the signing API. Example: https://yourproxy:6000 ",demandOption:!1,type:"string"},id:{describe:"A custom ID for the extension. This has no effect if the extension already declares an explicit ID in its manifest.",demandOption:!1,type:"string"},timeout:{describe:"Number of milliseconds to wait before giving up",type:"number"},channel:{describe:"The channel for which to sign the addon. Either 'listed' or 'unlisted'",type:"string"}}).command("run","Run the extension",n.run,{target:{alias:"t",describe:"The extensions runners to enable. Specify this option multiple times to run against multiple targets.",default:"firefox-desktop",demandOption:!1,type:"array",choices:["firefox-desktop","firefox-android","chromium"]},firefox:{alias:["f","firefox-binary"],describe:"Path or alias to a Firefox executable such as firefox-bin or firefox.exe. If not specified, the default Firefox will be used. You can specify the following aliases in lieu of a path: firefox, beta, nightly, firefoxdeveloperedition.",demandOption:!1,type:"string"},"firefox-profile":{alias:"p",describe:"Run Firefox using a copy of this profile. The profile can be specified as a directory or a name, such as one you would see in the Profile Manager. If not specified, a new temporary profile will be created.",demandOption:!1,type:"string"},"chromium-binary":{describe:"Path or alias to a Chromium executable such as google-chrome, google-chrome.exe or opera.exe etc. If not specified, the default Google Chrome will be used.",demandOption:!1,type:"string"},"chromium-profile":{describe:"Path to a custom Chromium profile",demandOption:!1,type:"string"},"keep-profile-changes":{describe:"Run Firefox directly in custom profile. Any changes to the profile will be saved.",demandOption:!1,type:"boolean"},reload:{describe:"Reload the extension when source files change.Disable with --no-reload.",demandOption:!1,default:!0,type:"boolean"},"watch-file":{describe:"Reload the extension only when the contents of thisfile changes. This is useful if you use a custom build process for your extension",demandOption:!1,type:"string"},"pre-install":{describe:"Pre-install the extension into the profile before startup. This is only needed to support older versions of Firefox.",demandOption:!1,type:"boolean"},pref:{describe:"Launch firefox with a custom preference (example: --pref=general.useragent.locale=fr-FR). You can repeat this option to set more than one preference.",demandOption:!1,requiresArg:!0,type:"array",coerce:D.a},"start-url":{alias:["u","url"],describe:"Launch firefox at specified page",demandOption:!1,type:"array"},"browser-console":{alias:["bc"],describe:"Open the DevTools Browser Console.",demandOption:!1,type:"boolean"},args:{alias:["arg"],describe:"Additional CLI options passed to the Browser binary",demandOption:!1,type:"array"},"adb-bin":{describe:"Specify a custom path to the adb binary",demandOption:!1,type:"string",requiresArg:!0},"adb-host":{describe:"Connect to adb on the specified host",demandOption:!1,type:"string",requiresArg:!0},"adb-port":{describe:"Connect to adb on the specified port",demandOption:!1,type:"string",requiresArg:!0},"adb-device":{alias:["android-device"],describe:"Connect to the specified adb device name",demandOption:!1,type:"string",requiresArg:!0},"adb-discovery-timeout":{describe:"Number of milliseconds to wait before giving up",demandOption:!1,type:"number",requiresArg:!0},"firefox-apk":{describe:"Run a specific Firefox for Android APK. Example: org.mozilla.fennec_aurora",demandOption:!1,type:"string",requiresArg:!0},"firefox-apk-component":{describe:"Run a specific Android Component (defaults to <firefox-apk>/.App)",demandOption:!1,type:"string",requiresArg:!0}}).command("lint","Validate the extension source",n.lint,{output:{alias:"o",describe:"The type of output to generate",type:"string",default:"text",choices:["json","text"]},metadata:{describe:"Output only metadata as JSON",type:"boolean",default:!1},"warnings-as-errors":{describe:"Treat warnings as errors by exiting non-zero for warnings",alias:"w",type:"boolean",default:!1},pretty:{describe:"Prettify JSON output",type:"boolean",default:!1},"self-hosted":{describe:"Your extension will be self-hosted. This disables messages related to hosting on addons.mozilla.org.",type:"boolean",default:!1},boring:{describe:"Disables colorful shell output",type:"boolean",default:!1}}).command("docs","Open the web-ext documentation in a browser",n.docs,{}),o.execute({getVersion:t,...i})}}).call(this,"src/program.js")},function(e,t){e.exports=require("yargs")},function(e,t){e.exports=require("yargs/yargs")},function(e,t){e.exports=require("watchpack")},function(e,t){e.exports=require("debounce")},function(e,t){e.exports=require("es6-error")},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(5),i=n(45),o=n.n(i);const s=Object(r.promisify)(o.a)},function(e,t){e.exports=require("zip-dir")},function(e,t){e.exports=require("multimatch")},function(e,t){e.exports=require("addons-linter")},function(e,t){e.exports=require("node-notifier")},function(e,t){e.exports=require("fx-runner")},function(e,t){e.exports=require("net")},function(e,t){e.exports=require("@cliqz-oss/node-firefox-connect")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return u}));var r=n(1),i=n.n(r),o=n(53),s=n.n(o),a=n(0),c=n(3);const d=Object(c.createLogger)(e);async function l(e){try{return await e()}catch(e){if(Object(a.f)("ENOENT",e)&&e.message.includes("spawn adb"))throw new a.d("No adb executable has been found. You can Use --adb-bin, --adb-host/--adb-port to configure it manually if needed.");throw e}}class u{constructor(e){i()(this,"params",void 0),i()(this,"adb",void 0),i()(this,"adbClient",void 0),i()(this,"artifactsDirMap",void 0),i()(this,"userAbortDiscovery",void 0),this.params=e;const{adb:t,adbBin:n,adbHost:r,adbPort:o}=e;this.adb=t||s.a,this.adbClient=this.adb.createClient({bin:n,host:r,port:o}),this.artifactsDirMap=new Map,this.userAbortDiscovery=!1}runShellCommand(e,t){const{adb:n,adbClient:r}=this;return d.debug(`Run adb shell command on ${e}: ${JSON.stringify(t)}`),l(async()=>await r.shell(e,t).then(n.util.readAll)).then(e=>e.toString())}async discoverDevices(){const{adbClient:e}=this;let t=[];return d.debug("Listing android devices"),t=await l(async()=>e.listDevices()),t.map(e=>e.id)}async discoverInstalledFirefoxAPKs(e,t){return d.debug(`Listing installed Firefox APKs on ${e}`),(await this.runShellCommand(e,["pm","list","packages"])).split("\n").map(e=>e.replace("package:","").trim()).filter(e=>t?e===t:e.startsWith("org.mozilla.fennec")||e.startsWith("org.mozilla.fenix")||e.startsWith("org.mozilla.geckoview")||e.startsWith("org.mozilla.firefox")||e.startsWith("org.mozilla.reference.browser"))}async getAndroidVersionNumber(e){const t=(await this.runShellCommand(e,["getprop","ro.build.version.sdk"])).trim(),n=parseInt(t);if(isNaN(n))throw new a.e("Unable to discovery android version on "+`${e}: ${t}`);return n}async ensureRequiredAPKRuntimePermissions(e,t,n){const r={};for(const e of n)r[e]=!1;const i=(await this.runShellCommand(e,["pm","dump",t])).split("\n");for(const e of i)for(const t of n)(e.includes(`${t}: granted=true`)||e.includes(`${t}, granted=true`))&&(r[t]=!0);for(const e of n)if(!r[e])throw new a.d(`Required ${e} has not be granted for ${t}. `+"Please grant them using the Android Settings or using the following adb command:\n"+`\t adb shell pm grant ${t} ${e}\n`)}async amForceStopAPK(e,t){await this.runShellCommand(e,["am","force-stop",t])}async getOrCreateArtifactsDir(e){let t=this.artifactsDirMap.get(e);if(t)return t;if(t=`/sdcard/web-ext-artifacts-${Date.now()}`,"1"!==(await this.runShellCommand(e,`test -d ${t} ; echo $?`)).trim())throw new a.e(`Cannot create artifacts directory ${t} `+`because it exists on ${e}.`);return await this.runShellCommand(e,["mkdir","-p",t]),this.artifactsDirMap.set(e,t),t}async clearArtifactsDir(e){const t=this.artifactsDirMap.get(e);t&&(this.artifactsDirMap.delete(e),d.debug(`Removing ${t} artifacts directory on ${e} device`),await this.runShellCommand(e,["rm","-rf",t]))}async pushFile(e,t,n){const{adbClient:r}=this;d.debug(`Pushing ${t} to ${n} on ${e}`),await l(async()=>{await r.push(e,t,n).then((function(e){return new Promise(t=>{e.on("end",t)})}))})}async startFirefoxAPK(e,t,n,r){const{adbClient:i}=this;d.debug(`Starting ${t} on ${e}`);const o=[{key:"args",value:`-profile ${r}`}],s=n?`${t}/.${n}`:`${t}/.App`;await l(async()=>{await i.startActivity(e,{wait:!0,action:"android.activity.MAIN",component:s,extras:o})})}setUserAbortDiscovery(e){this.userAbortDiscovery=e}async discoverRDPUnixSocket(e,t,{maxDiscoveryTime:n,retryInterval:r}={}){let i=[];const o=Date.now();for(;0===i.length;){if(this.userAbortDiscovery)throw new a.d("Exiting Firefox Remote Debugging socket discovery on user request");if(Date.now()-o>n)throw new a.e("Timeout while waiting for the Android Firefox Debugger Socket");i=(await this.runShellCommand(e,["cat","/proc/net/unix"])).split("\n").filter(e=>e.trim().endsWith(`${t}/firefox-debugger-socket`)),0===i.length&&await new Promise(e=>setTimeout(e,r))}if(i=i.map(e=>e.trim().split(/\s/).pop()),i.length>1)throw new a.e("Unexpected multiple RDP sockets: "+`${JSON.stringify(i)}`);return i[0]}async setupForward(e,t,n){const{adbClient:r}=this;d.debug(`Configuring ADB forward for ${e}: ${t} -> ${n}`),await l(async()=>{await r.forward(e,n,t)})}}}).call(this,"src/util/adb.js")},function(e,t){e.exports=require("adbkit")},function(e,t){e.exports=require("sign-addon")},function(e,t){e.exports=require("open")},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(57),i=n.n(r);function o({version:e,updateNotifier:t=i.a}){t({pkg:{name:"web-ext",version:e},updateCheckInterval:2592e5}).notify()}},function(e,t){e.exports=require("update-notifier")},function(e,t){e.exports=require("import-fresh")},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(4),i=n(0);async function o(e,{fileIsReadable:t=(e=>r.fs.access(e,r.fs.constants.R_OK))}={}){try{return await t(e),(await r.fs.stat(e)).isFile()}catch(e){if(Object(i.f)(["EACCES","ENOENT"],e))return!1;throw e}}},function(e,t,n){"use strict";n.r(t);var r=n(38),i=n(22);const o={logger:n(3)};t.default={main:r.a,cmd:i.a,util:o}},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return a}));var r=n(47),i=n(3),o=n(11);const s=Object(i.createLogger)(e);function a({artifactsDir:e,boring:t,ignoreFiles:n,metadata:i,output:a,pretty:c,sourceDir:d,selfHosted:l,verbose:u,warningsAsErrors:f},{createLinter:h=r.createInstance,createFileFilter:p=o.a,shouldExitProgram:g=!0}={}){const m=p({sourceDir:d,ignoreFiles:n,artifactsDir:e});return s.debug(`Running addons-linter on ${d}`),h({config:{logLevel:u?"debug":"fatal",stack:Boolean(u),pretty:c,warningsAsErrors:f,metadata:i,output:a,boring:t,selfHosted:l,shouldScanFile:e=>m.wantFile(e),_:[d]},runAsBinary:g}).run()}}.call(this,"src/cmd/lint.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return u}));var r=n(17),i=n(18),o=n(19),s=n(9),a=n(3),c=n(6),d=n(16);const l=Object(a.createLogger)(e);async function u({artifactsDir:e,browserConsole:t=!1,pref:n,firefox:a,firefoxProfile:u,keepProfileChanges:f=!1,ignoreFiles:h,noInput:p=!1,noReload:g=!1,preInstall:m=!1,sourceDir:b,watchFile:w,startUrl:x,target:y,args:v,adbBin:D,adbHost:$,adbPort:P,adbDevice:A,adbDiscoveryTimeout:E,firefoxApk:F,firefoxApkComponent:k,chromiumBinary:S,chromiumProfile:O},{buildExtension:j=r.default,desktopNotifications:C=i.a,firefoxApp:R=o,firefoxClient:I=s.a,reloadStrategy:T=d.c,MultiExtensionRunner:N=d.a,getValidatedManifest:q=c.a}={}){l.info(`Running web extension from ${b}`),m&&(l.info("Disabled auto-reloading because it's not possible with --pre-install"),g=!0);const L=n,U=[],_={extensions:[{sourceDir:b,manifestData:await q(b)}],keepProfileChanges:f,startUrl:x,args:v,desktopNotifications:C};if(!y||0===y.length||y.includes("firefox-desktop")){const e={..._,firefoxBinary:a,profilePath:u,customPrefs:L,browserConsole:t,preInstall:m,firefoxApp:R,firefoxClient:I},n=await Object(d.b)({target:"firefox-desktop",params:e});U.push(n)}if(y&&y.includes("firefox-android")){const e={..._,profilePath:u,customPrefs:L,browserConsole:t,preInstall:m,firefoxApk:F,firefoxApkComponent:k,adbDevice:A,adbHost:$,adbPort:P,adbBin:D,adbDiscoveryTimeout:E,firefoxApp:R,firefoxClient:I,desktopNotifications:i.a,buildSourceDir:(e,t)=>j({sourceDir:e,ignoreFiles:h,asNeeded:!1,artifactsDir:t},{showReadyMessage:!1})},n=await Object(d.b)({target:"firefox-android",params:e});U.push(n)}if(y&&y.includes("chromium")){const e={..._,chromiumBinary:S,chromiumProfile:O},t=await Object(d.b)({target:"chromium",params:e});U.push(t)}const M=new N({desktopNotifications:C,runners:U});return await M.run(),g?l.info("Automatic extension reloading has been disabled"):(l.info("The extension will reload if any source file changes"),T({extensionRunner:M,sourceDir:b,watchFile:w,artifactsDir:e,ignoreFiles:h,noInput:p})),M}}.call(this,"src/cmd/run.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"FirefoxDesktopExtensionRunner",(function(){return c}));var r=n(1),i=n.n(r),o=n(0),s=(n(19),n(9),n(3));const a=Object(s.createLogger)(e);class c{constructor(e){i()(this,"cleanupCallbacks",void 0),i()(this,"params",void 0),i()(this,"profile",void 0),i()(this,"reloadableExtensions",void 0),i()(this,"remoteFirefox",void 0),i()(this,"runningInfo",void 0),this.params=e,this.reloadableExtensions=new Map,this.cleanupCallbacks=new Set}getName(){return"Firefox Desktop"}async run(){await this.setupProfileDir(),await this.startFirefoxInstance()}async reloadAllExtensions(){const e=this.getName(),t=new Map;for(const{sourceDir:e}of this.params.extensions){const[n]=await this.reloadExtensionBySourceDir(e);n.reloadError instanceof Error&&t.set(e,n.reloadError)}return t.size>0?[{runnerName:e,reloadError:new o.b(t)}]:[{runnerName:e}]}async reloadExtensionBySourceDir(e){const t=this.getName(),n=this.reloadableExtensions.get(e);if(!n)return[{sourceDir:e,reloadError:new o.e("Extension not reloadable: "+`no addonId has been mapped to "${e}"`),runnerName:t}];try{await this.remoteFirefox.reloadAddon(n)}catch(n){return[{sourceDir:e,reloadError:n,runnerName:t}]}return[{runnerName:t,sourceDir:e}]}registerCleanup(e){this.cleanupCallbacks.add(e)}async exit(){if(!this.runningInfo||!this.runningInfo.firefox)throw new o.e("No firefox instance is currently running");this.runningInfo.firefox.kill()}async setupProfileDir(){const{customPrefs:e,extensions:t,keepProfileChanges:n,preInstall:r,profilePath:i,firefoxApp:o}=this.params;if(i?n?(a.debug(`Using Firefox profile from ${i}`),this.profile=await o.useProfile(i,{customPrefs:e})):(a.debug(`Copying Firefox profile from ${i}`),this.profile=await o.copyProfile(i,{customPrefs:e})):(a.debug("Creating new Firefox profile"),this.profile=await o.createProfile({customPrefs:e})),r)for(const e of t)await o.installExtension({asProxy:!0,extensionPath:e.sourceDir,manifestData:e.manifestData,profile:this.profile})}async startFirefoxInstance(){const{browserConsole:e,extensions:t,firefoxBinary:n,preInstall:r,startUrl:i,firefoxApp:s,firefoxClient:c,args:d}=this.params,l=[];if(e&&l.push("-jsconsole"),i){const e=Array.isArray(i)?i:[i];for(const t of e)l.push("--url",t)}if(d&&l.push(...d),this.runningInfo=await s.run(this.profile,{firefoxBinary:n,binaryArgs:l}),this.runningInfo.firefox.on("close",()=>{for(const e of this.cleanupCallbacks)try{e()}catch(e){a.error(`Exception on executing cleanup callback: ${e}`)}}),!r){const e=this.remoteFirefox=await c({port:this.runningInfo.debuggerPort});for(const n of t)try{const t=await e.installTemporaryAddon(n.sourceDir).then(e=>e.addon.id);if(!t)throw new o.e("Unexpected missing addonId in the installAsTemporaryAddon result");this.reloadableExtensions.set(n.sourceDir,t)}catch(e){throw e instanceof o.c?(a.debug(`Caught: ${e}`),new o.e("Temporary add-on installation is not supported in this version of Firefox (you need Firefox 49 or higher). For older Firefox versions, use --pre-install")):e}}}}}.call(this,"src/extension-runners/firefox-desktop.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"FirefoxAndroidExtensionRunner",(function(){return b}));var r=n(1),i=n.n(r),o=n(2),s=n.n(o),a=n(30),c=n.n(a),d=n(12),l=n(52),u=(n(18),n(0)),f=(n(19),n(9)),h=n(3),p=n(8);const g=Object(h.createLogger)(e),m={profilePath:"--profile-path",keepProfileChanges:"--keep-profile-changes",browserConsole:"--browser-console",preInstall:"--pre-install",startUrl:"--start-url",args:"--args"};class b{constructor(e){i()(this,"params",void 0),i()(this,"adbUtils",void 0),i()(this,"exiting",void 0),i()(this,"selectedAdbDevice",void 0),i()(this,"selectedFirefoxApk",void 0),i()(this,"selectedArtifactsDir",void 0),i()(this,"selectedRDPSocketFile",void 0),i()(this,"selectedTCPPort",void 0),i()(this,"cleanupCallbacks",void 0),i()(this,"adbExtensionsPathBySourceDir",void 0),i()(this,"reloadableExtensions",void 0),i()(this,"remoteFirefox",void 0),this.params=e,this.cleanupCallbacks=new Set,this.adbExtensionsPathBySourceDir=new Map,this.reloadableExtensions=new Map,this.printIgnoredParamsWarnings()}async run(){const{adbBin:e,adbHost:t,adbPort:n,ADBUtils:r=l.a}=this.params;this.adbUtils=new r({adbBin:e,adbHost:t,adbPort:n}),await this.adbDevicesDiscoveryAndSelect(),await this.apkPackagesDiscoveryAndSelect(),await this.adbCheckRuntimePermissions(),await this.adbForceStopSelectedPackage(),await this.adbPrepareProfileDir(),await Promise.all([this.adbStartSelectedPackage(),this.buildAndPushExtensions(),this.adbDiscoveryAndForwardRDPUnixSocket()]),await this.rdpInstallExtensions()}getName(){return"Firefox Android"}async reloadAllExtensions(){const e=this.getName(),t=new Map;for(const{sourceDir:e}of this.params.extensions){const[n]=await this.reloadExtensionBySourceDir(e);n.reloadError instanceof Error&&t.set(e,n.reloadError)}return t.size>0?[{runnerName:e,reloadError:new u.b(t)}]:[{runnerName:e}]}async reloadExtensionBySourceDir(e){const t=this.getName(),n=this.reloadableExtensions.get(e);if(!n)return[{sourceDir:e,reloadError:new u.e("Extension not reloadable: "+`no addonId has been mapped to "${e}"`),runnerName:t}];try{await this.buildAndPushExtension(e),await this.remoteFirefox.reloadAddon(n)}catch(n){return[{sourceDir:e,reloadError:n,runnerName:t}]}return[{runnerName:t,sourceDir:e}]}registerCleanup(e){this.cleanupCallbacks.add(e)}async exit(){const{adbUtils:e,selectedAdbDevice:t,selectedArtifactsDir:n}=this;this.exiting=!0,await this.adbForceStopSelectedPackage(),n&&(g.debug("Cleaning up artifacts directory on the Android device..."),await e.clearArtifactsDir(t));for(const e of this.cleanupCallbacks)try{e()}catch(e){g.error(e)}}getDeviceProfileDir(){return`${this.selectedArtifactsDir}/profile`}printIgnoredParamsWarnings(){Object.keys(m).forEach(e=>{this.params[e]&&g.warn(`The Firefox for Android target does not support ${m[e]}`)})}async adbDevicesDiscoveryAndSelect(){const{adbUtils:e}=this,{adbDevice:t}=this.params;let n=[];if(g.debug("Listing android devices"),n=await e.discoverDevices(),0===n.length)throw new u.d("No Android device found through ADB. Make sure the device is connected and USB debugging is enabled.");if(!t){const e=n.map(e=>` - ${e}`).join("\n");throw g.info(`\nAndroid devices found:\n${e}`),new u.d("Select an android device using --android-device=<name>")}const r=n.filter(e=>e===t);if(0===r.length){const e=JSON.stringify(n);throw new u.d(`Android device ${t} was not found in list: ${e}`)}this.selectedAdbDevice=r[0],g.info(`Selected ADB device: ${this.selectedAdbDevice}`)}async apkPackagesDiscoveryAndSelect(){const{adbUtils:e,selectedAdbDevice:t,params:{firefoxApk:n}}=this,r=await e.discoverInstalledFirefoxAPKs(t,n);if(0===r.length)throw new u.d("No Firefox packages were found on the selected Android device");const i=e=>e.map(e=>` - ${e}`).join("\n");if(!n){if(g.info(`\nPackages found:\n${i(r)}`),r.length>1)throw new u.d("Select one of the packages using --firefox-apk");return this.selectedFirefoxApk=r[0],void g.info(`Selected Firefox for Android APK: ${this.selectedFirefoxApk}`)}const o=r.filter(e=>e===n);if(0===o.length){const e=i(o);throw new u.d(`Package ${n} was not found in list: ${e}`)}this.selectedFirefoxApk=o[0],g.debug(`Selected Firefox for Android APK: ${this.selectedFirefoxApk}`)}async adbForceStopSelectedPackage(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:n}=this;g.info(`Stopping existing instances of ${n}...`),await e.amForceStopAPK(t,n)}async adbCheckRuntimePermissions(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:n}=this;g.debug(`Discovering Android version for ${t}...`);const r=await e.getAndroidVersionNumber(t);if("number"!=typeof r||Number.isNaN(r))throw new u.e(`Invalid Android version: ${r}`);if(g.debug(`Detected Android version ${r}`),r<23)return;g.debug("Checking read/write permissions needed for web-ext"+`on ${n}...`);await e.ensureRequiredAPKRuntimePermissions(t,n,["android.permission.READ_EXTERNAL_STORAGE","android.permission.WRITE_EXTERNAL_STORAGE"])}async adbPrepareProfileDir(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:n,params:{customPrefs:r,firefoxApp:i}}=this;g.debug(`Preparing a temporary profile for ${n}...`);const o=await i.createProfile({app:"fennec",customPrefs:r});this.selectedArtifactsDir=await e.getOrCreateArtifactsDir(t);const a=this.getDeviceProfileDir();await e.runShellCommand(t,["mkdir","-p",a]),await e.pushFile(t,s.a.join(o.profileDir,"user.js"),`${a}/user.js`),g.debug(`Created temporary profile at ${a}.`)}async adbStartSelectedPackage(){const{adbUtils:e,selectedFirefoxApk:t,selectedAdbDevice:n,params:{firefoxApkComponent:r}}=this,i=this.getDeviceProfileDir();g.info(`Starting ${t}...`),g.debug(`Using profile ${i} (ignored by Fenix)`),await e.startFirefoxAPK(n,t,r,i)}async buildAndPushExtension(e){const{adbUtils:t,selectedAdbDevice:n,selectedArtifactsDir:r,params:{buildSourceDir:i}}=this;await Object(d.b)(async o=>{const{extensionPath:a}=await i(e,o.path()),c=s.a.basename(a,".zip");let d=this.adbExtensionsPathBySourceDir.get(e);d||(d=`${r}/${c}.xpi`),g.debug(`Uploading ${c} on the android device`),await t.pushFile(n,a,d),g.debug(`Upload completed: ${d}`),this.adbExtensionsPathBySourceDir.set(e,d)})}async buildAndPushExtensions(){for(const{sourceDir:e}of this.params.extensions)await this.buildAndPushExtension(e)}async adbDiscoveryAndForwardRDPUnixSocket(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:n,params:{adbDiscoveryTimeout:r}}=this,i=this.params.stdin||process.stdin,{unixSocketDiscoveryRetryInterval:o}=b;let{unixSocketDiscoveryMaxTime:s}=b;"number"==typeof r&&(s=r);const a=(t,n)=>{n.ctrl&&"c"===n.name&&e.setUserAbortDiscovery(!0)};Object(p.a)(i)&&(c.a.emitKeypressEvents(i),Object(p.b)(i,!0),i.on("keypress",a));try{const r=`Waiting for ${n} Remote Debugging Server...`+'\nMake sure to enable "Remote Debugging via USB" from Settings -> Developer Tools if it is not yet enabled.';g.info(`\n${r}\n`),this.selectedRDPSocketFile=await e.discoverRDPUnixSocket(t,n,{maxDiscoveryTime:s,retryInterval:o})}finally{Object(p.a)(i)&&i.removeListener("keypress",a)}g.debug(`RDP Socket File selected: ${this.selectedRDPSocketFile}`);const d=await Object(f.b)();g.info(`You can connect to this Android device on TCP port ${d}`);const l=this.selectedRDPSocketFile.startsWith("@")?`localabstract:${this.selectedRDPSocketFile.substr(1)}`:`localfilesystem:${this.selectedRDPSocketFile}`;await e.setupForward(t,l,`tcp:${d}`),this.selectedTCPPort=d}async rdpInstallExtensions(){const{selectedTCPPort:e,params:{extensions:t,firefoxClient:n}}=this,r=this.remoteFirefox=await n({port:e});r.client.on("end",()=>{this.exiting||(g.info("Exiting the device because Firefox for Android disconnected"),this.exit())});for(const e of t){const{sourceDir:t}=e,n=this.adbExtensionsPathBySourceDir.get(t);if(!n)throw new u.e(`ADB extension path for "${t}" was unexpectedly empty`);const i=await r.installTemporaryAddon(n).then(e=>e.addon.id);if(!i)throw new u.e("Received an empty addonId from "+`remoteFirefox.installTemporaryAddon("${n}")`);this.reloadableExtensions.set(e.sourceDir,i)}}}i()(b,"unixSocketDiscoveryRetryInterval",3e3),i()(b,"unixSocketDiscoveryMaxTime",18e4)}.call(this,"src/extension-runners/firefox-android.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"DEFAULT_CHROME_FLAGS",(function(){return w})),n.d(t,"ChromiumExtensionRunner",(function(){return x}));var r=n(1),i=n.n(r),o=n(2),s=n.n(o),a=n(4),c=n(28),d=n.n(c),l=n(36),u=n.n(l),f=n(37),h=n.n(f),p=n(3),g=n(12);const m=Object(p.createLogger)(e),b=["--disable-extensions","--mute-audio"],w=u.a.defaultFlags().filter(e=>!b.includes(e));class x{constructor(e){i()(this,"cleanupCallbacks",void 0),i()(this,"params",void 0),i()(this,"chromiumInstance",void 0),i()(this,"chromiumLaunch",void 0),i()(this,"reloadManagerExtension",void 0),i()(this,"wss",void 0),i()(this,"exiting",void 0),i()(this,"_promiseSetupDone",void 0);const{chromiumLaunch:t=l.launch}=e;this.params=e,this.chromiumLaunch=t,this.cleanupCallbacks=new Set}getName(){return"Chromium"}async run(){this._promiseSetupDone=this.setupInstance(),await this._promiseSetupDone}async setupInstance(){this.wss=await new Promise(e=>{const t=new h.a.Server({port:0,host:"localhost"},()=>e(t))}),this.wss.on("connection",(function(e){e.on("error",e=>{m.debug(`websocket connection error: ${e}`)})})),this.reloadManagerExtension=await this.createReloadManagerExtension();const e=[this.reloadManagerExtension].concat(this.params.extensions.map(({sourceDir:e})=>e)).join(","),{chromiumBinary:t}=this.params;m.debug("Starting Chromium instance..."),t&&m.debug(`(chromiumBinary: ${t})`);const n=[...w];let r;if(n.push(`--load-extension=${e}`),this.params.args&&n.push(...this.params.args),this.params.chromiumProfile&&n.push(`--user-data-dir=${this.params.chromiumProfile}`),this.params.startUrl){const e=Array.isArray(this.params.startUrl)?this.params.startUrl:[this.params.startUrl];r=e.shift(),n.push(...e)}this.chromiumInstance=await this.chromiumLaunch({enableExtensions:!0,chromePath:t,chromeFlags:n,startingUrl:r,ignoreDefaultFlags:!0}),this.chromiumInstance.process.once("close",()=>{this.chromiumInstance=null,this.exiting||(m.info("Exiting on Chromium instance disconnected."),this.exit())})}async wssBroadcast(e){return new Promise(t=>{const n=this.wss?new Set(this.wss.clients):new Set;function r(){this.removeEventListener("message",i),this.removeEventListener("close",r),n.delete(this)}const i=async e=>{if("webExtReloadExtensionComplete"===JSON.parse(e.data).type){for(const e of n)r.call(e);t()}};for(const t of n)t.readyState===h.a.OPEN?(t.addEventListener("message",i),t.addEventListener("close",r),t.send(JSON.stringify(e))):n.delete(t);0===n.size&&t()})}async createReloadManagerExtension(){const e=new g.a;await e.create(),this.registerCleanup(()=>e.remove());const t=s.a.join(e.path(),`reload-manager-extension-${Date.now()}`);m.debug(`Creating reload-manager-extension in ${t}`),await d()(t),await a.fs.writeFile(s.a.join(t,"manifest.json"),JSON.stringify({manifest_version:2,name:"web-ext Reload Manager Extension",version:"1.0",permissions:["management","tabs"],background:{scripts:["bg.js"]}}));const n=this.wss.address(),r=`(function bgPage() {\n      async function getAllDevExtensions() {\n        const allExtensions = await new Promise(\n          r => chrome.management.getAll(r));\n\n        return allExtensions.filter((extension) => {\n          return extension.installType === "development" &&\n            extension.id !== chrome.runtime.id;\n        });\n      }\n\n      const setEnabled = (extensionId, value) =>\n        chrome.runtime.id == extensionId ?\n        new Promise.resolve() :\n        new Promise(r => chrome.management.setEnabled(extensionId, value, r));\n\n      async function reloadExtension(extensionId) {\n        await setEnabled(extensionId, false);\n        await setEnabled(extensionId, true);\n      }\n\n      const ws = new window.WebSocket(\n        "ws://${n.address}:${n.port}");\n\n      ws.onmessage = async (evt) => {\n        const msg = JSON.parse(evt.data);\n        if (msg.type === 'webExtReloadAllExtensions') {\n          const devExtensions = await getAllDevExtensions();\n          await Promise.all(devExtensions.map(ext => reloadExtension(ext.id)));\n          ws.send(JSON.stringify({ type: 'webExtReloadExtensionComplete' }));\n        }\n      };\n    })()`;return await a.fs.writeFile(s.a.join(t,"bg.js"),r),t}async reloadAllExtensions(){const e=this.getName();return await this.wssBroadcast({type:"webExtReloadAllExtensions"}),process.stdout.write(`\rLast extension reload: ${(new Date).toTimeString()}`),m.debug("\n"),[{runnerName:e}]}async reloadExtensionBySourceDir(e){return this.reloadAllExtensions()}registerCleanup(e){this.cleanupCallbacks.add(e)}async exit(){this.exiting=!0,this._promiseSetupDone&&await this._promiseSetupDone.catch(e=>{m.debug(`ignored setup error on chromium runner shutdown: ${e}`)}),this.chromiumInstance&&(await this.chromiumInstance.kill(),this.chromiumInstance=null),this.wss&&(await new Promise(e=>this.wss.close(e)),this.wss=null);for(const e of this.cleanupCallbacks)try{e()}catch(e){m.error(e)}}}}.call(this,"src/extension-runners/chromium.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"extensionIdFile",(function(){return m})),n.d(t,"default",(function(){return b})),n.d(t,"getIdFromSourceDir",(function(){return w})),n.d(t,"saveIdToSourceDir",(function(){return x}));var r=n(2),i=n.n(r),o=n(4),s=n(54),a=n.n(s),c=n(17),d=n(6),l=n(12),u=n(0),f=n(27),h=n(3);const p=Object(h.createLogger)(e),g=o.fs.readFile.bind(o.fs),m=".web-extension-id";function b({apiKey:e,apiProxy:t,apiSecret:n,apiUrlPrefix:r,artifactsDir:i,id:o,ignoreFiles:s=[],sourceDir:h,timeout:g,verbose:m,channel:b},{build:y=c.default,preValidatedManifest:v,signAddon:D=a.a}={}){return Object(l.b)((async function(a){let c;await Object(f.a)(i),c=v||await Object(d.a)(h);const[l,$]=await Promise.all([y({sourceDir:h,ignoreFiles:s,artifactsDir:a.path()},{manifestData:c,showReadyMessage:!1}),w(h)]),P=Object(d.b)(c);if(o&&P)throw new u.d(`Cannot set custom ID ${o} because manifest.json `+`declares ID ${P}`);o&&p.debug(`Using custom ID declared as --id=${o}`),P&&(o=P),!o&&$&&(p.info(`Using previously auto-generated extension ID: ${$}`),o=$),o||p.warn("No extension ID specified (it will be auto-generated)");const A=await D({apiKey:e,apiSecret:n,apiUrlPrefix:r,apiProxy:t,timeout:g,verbose:m,id:o,xpiPath:l.extensionPath,version:c.version,downloadDir:i,channel:b});if(A.id&&await x(h,A.id),!A.success)throw p.info("FAIL"),new u.e("The extension could not be signed");return p.info(`Extension ID: ${A.id}`),p.info("SUCCESS"),A}))}async function w(e,t=g){const n=i.a.join(e,m);let r;try{r=await t(n)}catch(e){if(Object(u.f)("ENOENT",e))return void p.debug(`No ID file found at: ${n}`);throw e}let o=r.toString().split("\n");o=o.filter(e=>{if((e=e.trim())&&!e.startsWith("#"))return e});const s=o[0];if(p.debug(`Found extension ID ${s} in ${n}`),!s)throw new u.d(`No ID found in extension ID file ${n}`);return s}async function x(e,t){const n=i.a.join(e,m);await o.fs.writeFile(n,["# This file was created by https://github.com/mozilla/web-ext","# Your auto-generated extension ID for addons.mozilla.org is:",t.toString()].join("\n")),p.debug(`Saved auto-generated ID ${t} to ${n}`)}}.call(this,"src/cmd/sign.js")},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"url",(function(){return a})),n.d(t,"default",(function(){return c}));var r=n(55),i=n.n(r),o=n(3);const s=Object(o.createLogger)(e),a="https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Getting_started_with_web-ext";function c(e,{openUrl:t=i.a}={}){return new Promise((e,n)=>{t(a,t=>{t?(s.debug(`Encountered an error while opening URL ${a}`,t),n(t)):e()})})}}.call(this,"src/cmd/docs.js")}]);
//# sourceMappingURL=web-ext.js.map